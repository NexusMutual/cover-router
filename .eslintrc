{
  "env": {
    "commonjs": true,
    "es2022": true,
    "node": true,
    "mocha": true
  },
  "extends": [
    "semistandard",
    "plugin:n/recommended", // uses the recommended rules from eslint-plugin-n (node)
    "prettier" // enables eslint-plugin-prettier and displays prettier errors as ESLint errors. (must be the last config in extends array)
  ],
  "ignorePatterns": ["node_modules/", "dist", "!.github"],
  "parserOptions": {
    "ecmaVersion": 2022
  },
  "rules": {
    // JavaScript rules
    "comma-dangle": ["warn", "always-multiline"],
    "curly": ["error", "all"],
    "max-len": ["error", { "code": 120 }],
    "mocha/no-async-describe": "error",
    "mocha/no-exclusive-tests": "error",
    "no-nested-ternary": "error",
    "padded-blocks": "off",
    "space-before-function-paren": "off",
    "no-useless-constructor": "off",
    "n/no-process-exit": "off",
    "n/no-unsupported-features/es-syntax": "off",
    "n/no-unpublished-import": "off",
    "n/no-extraneous-import": "error",
    "import/no-unresolved": "error",
    "prettier/prettier": ["error", { "endOfLine": "auto" }], // Ensure Prettier discrepancies are treated as errors
    "import/order": [
      1,
      {
        "groups": ["builtin", "external", "internal", ["parent", "sibling", "index"], "object", "type"],
        "alphabetize": { "order": "asc", "caseInsensitive": true },
        "newlines-between": "always"
      }
    ]
  },
  "overrides": [
    {
      "files": ["**/*.ts"],
      "parser": "@typescript-eslint/parser",
      "parserOptions": {
        "ecmaVersion": 2022,
        "sourceType": "module", // allows for the use of imports
        "project": "./tsconfig.json",
        "tsconfigRootDir": "."
      },
      "plugins": ["@typescript-eslint"],
      "extends": [
        "semistandard",
        "plugin:@typescript-eslint/recommended", // uses the recommended rules from the @typescript-eslint/eslint-plugin
        "plugin:n/recommended", // uses the recommended rules from eslint-plugin-n (node)
        "prettier" // enables eslint-plugin-prettier and displays prettier errors as ESLint errors. (must be the last config in extends array)
      ],
      "settings": {
        "import/parsers": {
          "@typescript-eslint/parser": [".ts"]
        },
        "import/resolver": {
          "typescript": {
            "alwaysTryTypes": true, // always try to resolve types under `<root>@types` directory even it doesn't contain any source code, like `@types/unist`
            "project": "./tsconfig.json"
          },
          "node": {
            "extensions": [".js", ".ts"]
          }
        }
      },
      // TypeScript rules
      "rules": {
        // copy all base rules to make sure they apply to TS files as well
        "comma-dangle": ["warn", "always-multiline"],
        "curly": ["error", "all"],
        "max-len": ["error", { "code": 120 }],
        "mocha/no-async-describe": "error",
        "mocha/no-exclusive-tests": "error",
        "no-nested-ternary": "error",
        "padded-blocks": "off",
        "space-before-function-paren": "off",
        "no-useless-constructor": "off",
        "n/no-process-exit": "off",
        "n/no-unsupported-features/es-syntax": "off",
        "n/no-unpublished-import": "off",
        "n/no-extraneous-import": "error",
        "prettier/prettier": ["error", { "endOfLine": "auto" }],
        "import/order": [
          1,
          {
            "groups": ["builtin", "external", "internal", ["parent", "sibling", "index"], "object", "type"],
            "alphabetize": { "order": "asc", "caseInsensitive": true },
            "newlines-between": "always"
          }
        ],

        // TypeScript specific rules
        "no-use-before-define": "off", // disable as it conflicts with @typescript-eslint/no-use-before-define
        "@typescript-eslint/no-use-before-define": "error",
        "n/no-missing-import": "off", // disable as it conflicts with TS compiling to ES modules.
        "import/no-unresolved": "error", // replaces the above n/no-missing-import
      }
    },
    {
      "files": ["**/*.spec.ts"],
      "parser": "@typescript-eslint/parser",
      "parserOptions": {
        "ecmaVersion": 2022,
        "sourceType": "module",
        "project": null  // Don't use a tsconfig for these files
      },
      "rules": {
        "@typescript-eslint/no-unused-expressions": "off" // allow mocha expect syntax i.e. expect(result).to.be.true
      }
    },
    {
      "files": ["test/**/*.js"],
      "rules": {
        "n/no-unpublished-require": "off", // turn off no-unpublished-require for test files
        "no-unused-expressions": "off" // allow mocha expect syntax i.e. expect(result).to.be.true
      }
    }
  ],
  "plugins": [
    "mocha",
    "import",
    "prettier" // so prettier errors shows up in eslint
  ],
  "settings": {
    "import/resolver": {
      "node": {
        "extensions": [".js", ".ts", ".tsx"]
      }
    }
  },
  "root": true
}
