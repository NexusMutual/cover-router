name: Fast-forward rc to master

on:
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref_name }}
  cancel-in-progress: true

jobs:
  validate-version:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          ref: release-candidate
          # needs commit history and tags determine version bump
          fetch-depth: 0
          fetch-tags: true

      - name: Get package.json version
        id: package-version
        run: |
          PACKAGE_VERSION=$(jq -r .version package.json)
          echo "version=$PACKAGE_VERSION" >> $GITHUB_OUTPUT
          echo "Package version: $PACKAGE_VERSION"

      - name: Get latest git tag version
        id: tag-version
        run: |
          # git tags has v prefix
          LATEST_TAG=$(git describe --tags --abbrev=0 2>/dev/null || echo "v0.0.0")
          LATEST_TAG_VERSION=${LATEST_TAG#v} # Remove 'v' prefix
          echo "version=$LATEST_TAG_VERSION" >> $GITHUB_OUTPUT
          echo "Latest tag version: $LATEST_TAG_VERSION (from tag: $LATEST_TAG)"

      - name: Validate version bump
        run: |
          PACKAGE_VERSION="${{ steps.package-version.outputs.version }}"
          LATEST_TAG_VERSION="${{ steps.tag-version.outputs.version }}"

          echo "Comparing package version ($PACKAGE_VERSION) with latest tag version ($LATEST_TAG_VERSION)"

          if [ "$PACKAGE_VERSION" = "$LATEST_TAG_VERSION" ]; then
            echo "::error::The package version to be released ($PACKAGE_VERSION) is the same as the latest tag version ($LATEST_TAG_VERSION)"
            echo "::warning::Commit messages on the dev branch must include changes beyond 'docs', 'style', 'test', or 'ci'"
            echo "::info::Please ensure your commits reflect meaningful changes to trigger an automatic version bump."
            exit 1
          fi

          echo "Version bump validation passed."

  wait-for-merge-workflow:
    runs-on: ubuntu-latest
    steps:
      - name: Check if any merge-to-dev-or-hotfix workflow is running
        uses: actions/github-script@v7
        with:
          script: |
            const MERGE_DEV_WORKFLOW_NAME = "merge-to-dev-or-hotfix.yml";

            const workflows = await github.rest.actions.listWorkflowRunsForRepo({
              owner: context.repo.owner,
              repo: context.repo.repo,
              workflow_id: MERGE_DEV_WORKFLOW_NAME,
              status: 'in_progress',
            });

            if (workflows.data.total_count > 0) {
              core.setFailed(`${MERGE_DEV_WORKFLOW_NAME} workflow is currently running. Please retry after it completes.`);
            } else {
              console.log(`No running ${MERGE_DEV_WORKFLOW_NAME} workflows found. Proceeding.`);
            }

  ff-master:
    needs: [validate-version, wait-for-merge-workflow]
    uses: NexusMutual/workflows/.github/workflows/fast-forward.yml@master
    with:
      environment: production
      source-ref: release-candidate
      target-ref: master
    secrets:
      DEPLOYER_APP_ID: ${{ secrets.DEPLOYER_APP_ID }}
      DEPLOYER_APP_PK: ${{ secrets.DEPLOYER_APP_PK }}

  tag-image:
    uses: NexusMutual/workflows/.github/workflows/tag-image.yml@master
    needs: ff-master
    with:
      environment: production
      image: ${{ github.repository }}
      ref: master
      target-tag: latest
    secrets:
      TOKEN: ${{ secrets.GITHUB_TOKEN }}
      DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
      DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}

  git-tag-release:
    needs: ff-master
    uses: NexusMutual/workflows/.github/workflows/git-tag-github-release.yml@master
    with:
      environment: production
      ref: master
    secrets:
      DEPLOYER_APP_ID: ${{ secrets.DEPLOYER_APP_ID }}
      DEPLOYER_APP_PK: ${{ secrets.DEPLOYER_APP_PK }}

  rebase-hotfix:
    needs: ff-master
    uses: NexusMutual/workflows/.github/workflows/rebase.yml@master
    with:
      environment: production
      source-ref: master
      target-ref: hotfix
    secrets:
      DEPLOYER_APP_ID: ${{ secrets.DEPLOYER_APP_ID }}
      DEPLOYER_APP_PK: ${{ secrets.DEPLOYER_APP_PK }}

  rebase-dev:
    needs: ff-master
    uses: NexusMutual/workflows/.github/workflows/rebase.yml@master
    with:
      environment: production
      source-ref: master
      target-ref: dev
    secrets:
      DEPLOYER_APP_ID: ${{ secrets.DEPLOYER_APP_ID }}
      DEPLOYER_APP_PK: ${{ secrets.DEPLOYER_APP_PK }}

  sync-rc-dev:
    needs: ff-master
    uses: ./.github/workflows/merge-to-dev-or-hotfix.yml
    with:
      branch: dev
    secrets:
      DEPLOYER_APP_ID: ${{ secrets.DEPLOYER_APP_ID }}
      DEPLOYER_APP_PK: ${{ secrets.DEPLOYER_APP_PK }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
      DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
